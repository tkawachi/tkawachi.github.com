<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: i18n | tkawachi Blog]]></title>
  <link href="http://tkawachi.github.io/blog/categories/i18n/atom.xml" rel="self"/>
  <link href="http://tkawachi.github.io/"/>
  <updated>2014-11-14T00:52:27+09:00</updated>
  <id>http://tkawachi.github.io/</id>
  <author>
    <name><![CDATA[KAWACHI Takashi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Rails の JavaScript (CoffeeScript) でローカライゼーションを簡単に]]></title>
    <link href="http://tkawachi.github.io/blog/2012/12/06/i18n-js/"/>
    <updated>2012-12-06T23:37:00+09:00</updated>
    <id>http://tkawachi.github.io/blog/2012/12/06/i18n-js</id>
    <content type="html"><![CDATA[<p>Rails 3.2 のプロジェクトで作業していて JavaScript (CoffeeScript) でのローカライゼーションをしたくなりました。
調べてみたところ <a href="https://github.com/fnando/i18n-js">i18n-js</a> が簡単につかえてよさそうな感じです。</p>

<p>まずは Gemfile に追加して <code>bundle install</code> 。</p>

<pre><code class="ruby Gemfile">gem "i18n-js"
</code></pre>

<p>続いて application.js に以下の行を追加。</p>

<pre><code class="javascript app/assets/javascripts/application.js">//= require i18n
//= require i18n/translations
</code></pre>

<p>app/views/layouts/application.html.erb に以下の行を追加。
指定した言語で訳が存在しない時にデフォルト言語の訳を参照したいので <code>I18n.fallbacks = true;</code> を指定しています。</p>

<p>&#8220;` erb app/views/layouts/application.html.erb</p>

<script type="text/javascript">
    I18n.defaultLocale = "<%= I18n.default_locale %>";
    I18n.locale = "<%= I18n.locale %>";
    I18n.fallbacks = true;
</script>


<pre><code>
最後に `rake i18n:js:setup` を実行すると `config/i18n-js.yml` が生成されます。

これで `config/locales/*.yml` に書いてある Rails (Ruby) 側で利用できる情報と同じものが利用できるようになります。

ローカライゼーションは `I18n.t()` 関数で実行します。
</code></pre>

<p>I18n.t(&ldquo;hello&rdquo;);
&#8220;`</p>

<p>デフォルト値を指定したい場合はこんな感じ。</p>

<pre><code class="javascript">I18n.t("hello", {defaultValue: "こんちは"});
</code></pre>

<p>便利に使わせていただきます。</p>
]]></content>
  </entry>
  
</feed>
